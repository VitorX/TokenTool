//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceHost.Test.AzureApp.DataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AzureApp", Namespace="http://schemas.datacontract.org/2004/07/TokenAssistant.Data", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceHost.Test.AzureApp.DataService.ClientAzureApp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceHost.Test.AzureApp.DataService.ServerAzureApp))]
    public partial class AzureApp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RedirectURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceHost.Test.AzureApp.DataService.AzureAppType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceHost.Test.AzureApp.DataService.TokenRequest[] tokenRequestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RedirectURL {
            get {
                return this.RedirectURLField;
            }
            set {
                if ((object.ReferenceEquals(this.RedirectURLField, value) != true)) {
                    this.RedirectURLField = value;
                    this.RaisePropertyChanged("RedirectURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceHost.Test.AzureApp.DataService.AzureAppType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceHost.Test.AzureApp.DataService.TokenRequest[] tokenRequests {
            get {
                return this.tokenRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenRequestsField, value) != true)) {
                    this.tokenRequestsField = value;
                    this.RaisePropertyChanged("tokenRequests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientAzureApp", Namespace="http://schemas.datacontract.org/2004/07/TokenAssistant.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ClientAzureApp : ServiceHost.Test.AzureApp.DataService.AzureApp {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerAzureApp", Namespace="http://schemas.datacontract.org/2004/07/TokenAssistant.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ServerAzureApp : ServiceHost.Test.AzureApp.DataService.AzureApp {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecretField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Secret {
            get {
                return this.SecretField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretField, value) != true)) {
                    this.SecretField = value;
                    this.RaisePropertyChanged("Secret");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AzureAppType", Namespace="http://schemas.datacontract.org/2004/07/TokenAssistant.Data")]
    public enum AzureAppType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        client = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenRequest", Namespace="http://schemas.datacontract.org/2004/07/TokenAssistant.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TokenRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceHost.Test.AzureApp.DataService.AzureApp AppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefreshTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignInUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceHost.Test.AzureApp.DataService.AzureApp App {
            get {
                return this.AppField;
            }
            set {
                if ((object.ReferenceEquals(this.AppField, value) != true)) {
                    this.AppField = value;
                    this.RaisePropertyChanged("App");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefreshToken {
            get {
                return this.RefreshTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.RefreshTokenField, value) != true)) {
                    this.RefreshTokenField = value;
                    this.RaisePropertyChanged("RefreshToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resource {
            get {
                return this.ResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceField, value) != true)) {
                    this.ResourceField = value;
                    this.RaisePropertyChanged("Resource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignInUserName {
            get {
                return this.SignInUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SignInUserNameField, value) != true)) {
                    this.SignInUserNameField = value;
                    this.RaisePropertyChanged("SignInUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AzureApp.DataService.AzureAppService")]
    public interface AzureAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/AddApp", ReplyAction="http://tempuri.org/AzureAppService/AddAppResponse")]
        void AddApp(ServiceHost.Test.AzureApp.DataService.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/AddApp", ReplyAction="http://tempuri.org/AzureAppService/AddAppResponse")]
        System.Threading.Tasks.Task AddAppAsync(ServiceHost.Test.AzureApp.DataService.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/DeleteApp", ReplyAction="http://tempuri.org/AzureAppService/DeleteAppResponse")]
        void DeleteApp(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/DeleteApp", ReplyAction="http://tempuri.org/AzureAppService/DeleteAppResponse")]
        System.Threading.Tasks.Task DeleteAppAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/GetAllApps", ReplyAction="http://tempuri.org/AzureAppService/GetAllAppsResponse")]
        ServiceHost.Test.AzureApp.DataService.AzureApp[] GetAllApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/GetAllApps", ReplyAction="http://tempuri.org/AzureAppService/GetAllAppsResponse")]
        System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.AzureApp[]> GetAllAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/GetApp", ReplyAction="http://tempuri.org/AzureAppService/GetAppResponse")]
        ServiceHost.Test.AzureApp.DataService.AzureApp GetApp(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/GetApp", ReplyAction="http://tempuri.org/AzureAppService/GetAppResponse")]
        System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.AzureApp> GetAppAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/SaveApp", ReplyAction="http://tempuri.org/AzureAppService/SaveAppResponse")]
        void SaveApp(ServiceHost.Test.AzureApp.DataService.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/SaveApp", ReplyAction="http://tempuri.org/AzureAppService/SaveAppResponse")]
        System.Threading.Tasks.Task SaveAppAsync(ServiceHost.Test.AzureApp.DataService.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/SaveChanges", ReplyAction="http://tempuri.org/AzureAppService/SaveChangesResponse")]
        void SaveChanges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/SaveChanges", ReplyAction="http://tempuri.org/AzureAppService/SaveChangesResponse")]
        System.Threading.Tasks.Task SaveChangesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/Hello", ReplyAction="http://tempuri.org/AzureAppService/HelloResponse")]
        string Hello(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/Hello", ReplyAction="http://tempuri.org/AzureAppService/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/Test", ReplyAction="http://tempuri.org/AzureAppService/TestResponse")]
        ServiceHost.Test.AzureApp.DataService.TokenRequest Test(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AzureAppService/Test", ReplyAction="http://tempuri.org/AzureAppService/TestResponse")]
        System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.TokenRequest> TestAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AzureAppServiceChannel : ServiceHost.Test.AzureApp.DataService.AzureAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenAssistantServiceClient : System.ServiceModel.ClientBase<ServiceHost.Test.AzureApp.DataService.AzureAppService>, ServiceHost.Test.AzureApp.DataService.AzureAppService {
        
        public TokenAssistantServiceClient() {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenAssistantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddApp(ServiceHost.Test.AzureApp.DataService.AzureApp app) {
            base.Channel.AddApp(app);
        }
        
        public System.Threading.Tasks.Task AddAppAsync(ServiceHost.Test.AzureApp.DataService.AzureApp app) {
            return base.Channel.AddAppAsync(app);
        }
        
        public void DeleteApp(string clientId) {
            base.Channel.DeleteApp(clientId);
        }
        
        public System.Threading.Tasks.Task DeleteAppAsync(string clientId) {
            return base.Channel.DeleteAppAsync(clientId);
        }
        
        public ServiceHost.Test.AzureApp.DataService.AzureApp[] GetAllApps() {
            return base.Channel.GetAllApps();
        }
        
        public System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.AzureApp[]> GetAllAppsAsync() {
            return base.Channel.GetAllAppsAsync();
        }
        
        public ServiceHost.Test.AzureApp.DataService.AzureApp GetApp(string clientId) {
            return base.Channel.GetApp(clientId);
        }
        
        public System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.AzureApp> GetAppAsync(string clientId) {
            return base.Channel.GetAppAsync(clientId);
        }
        
        public void SaveApp(ServiceHost.Test.AzureApp.DataService.AzureApp app) {
            base.Channel.SaveApp(app);
        }
        
        public System.Threading.Tasks.Task SaveAppAsync(ServiceHost.Test.AzureApp.DataService.AzureApp app) {
            return base.Channel.SaveAppAsync(app);
        }
        
        public void SaveChanges() {
            base.Channel.SaveChanges();
        }
        
        public System.Threading.Tasks.Task SaveChangesAsync() {
            return base.Channel.SaveChangesAsync();
        }
        
        public string Hello(string name) {
            return base.Channel.Hello(name);
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync(string name) {
            return base.Channel.HelloAsync(name);
        }
        
        public ServiceHost.Test.AzureApp.DataService.TokenRequest Test(string name) {
            return base.Channel.Test(name);
        }
        
        public System.Threading.Tasks.Task<ServiceHost.Test.AzureApp.DataService.TokenRequest> TestAsync(string name) {
            return base.Channel.TestAsync(name);
        }
    }
}
