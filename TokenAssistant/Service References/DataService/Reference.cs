//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TokenAssistant.DataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataService.TokenAssistantService")]
    public interface TokenAssistantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/AddApp", ReplyAction="http://tempuri.org/TokenAssistantService/AddAppResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ClientAzureApp))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ServerAzureApp))]
        void AddApp(TokenAssistant.Data.DataLayer.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/AddApp", ReplyAction="http://tempuri.org/TokenAssistantService/AddAppResponse")]
        System.Threading.Tasks.Task AddAppAsync(TokenAssistant.Data.DataLayer.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/DeleteApp", ReplyAction="http://tempuri.org/TokenAssistantService/DeleteAppResponse")]
        void DeleteApp(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/DeleteApp", ReplyAction="http://tempuri.org/TokenAssistantService/DeleteAppResponse")]
        System.Threading.Tasks.Task DeleteAppAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetAllApps", ReplyAction="http://tempuri.org/TokenAssistantService/GetAllAppsResponse")]
        TokenAssistant.Data.DataLayer.AzureApp[] GetAllApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetAllApps", ReplyAction="http://tempuri.org/TokenAssistantService/GetAllAppsResponse")]
        System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.AzureApp[]> GetAllAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/SaveApp", ReplyAction="http://tempuri.org/TokenAssistantService/SaveAppResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ClientAzureApp))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ServerAzureApp))]
        void SaveApp(TokenAssistant.Data.DataLayer.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/SaveApp", ReplyAction="http://tempuri.org/TokenAssistantService/SaveAppResponse")]
        System.Threading.Tasks.Task SaveAppAsync(TokenAssistant.Data.DataLayer.AzureApp app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/SaveChanges", ReplyAction="http://tempuri.org/TokenAssistantService/SaveChangesResponse")]
        void SaveChanges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/SaveChanges", ReplyAction="http://tempuri.org/TokenAssistantService/SaveChangesResponse")]
        System.Threading.Tasks.Task SaveChangesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetApp", ReplyAction="http://tempuri.org/TokenAssistantService/GetAppResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ClientAzureApp))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TokenAssistant.Data.DataLayer.ServerAzureApp))]
        TokenAssistant.Data.DataLayer.AzureApp GetApp(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetApp", ReplyAction="http://tempuri.org/TokenAssistantService/GetAppResponse")]
        System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.AzureApp> GetAppAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/AddUser", ReplyAction="http://tempuri.org/TokenAssistantService/AddUserResponse")]
        void AddUser(TokenAssistant.Data.DataLayer.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/AddUser", ReplyAction="http://tempuri.org/TokenAssistantService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(TokenAssistant.Data.DataLayer.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/DeleteUser", ReplyAction="http://tempuri.org/TokenAssistantService/DeleteUserResponse")]
        void DeleteUser(TokenAssistant.Data.DataLayer.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/DeleteUser", ReplyAction="http://tempuri.org/TokenAssistantService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(TokenAssistant.Data.DataLayer.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetAllUsers", ReplyAction="http://tempuri.org/TokenAssistantService/GetAllUsersResponse")]
        TokenAssistant.Data.DataLayer.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetAllUsers", ReplyAction="http://tempuri.org/TokenAssistantService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetUser", ReplyAction="http://tempuri.org/TokenAssistantService/GetUserResponse")]
        TokenAssistant.Data.DataLayer.User GetUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenAssistantService/GetUser", ReplyAction="http://tempuri.org/TokenAssistantService/GetUserResponse")]
        System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.User> GetUserAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TokenAssistantServiceChannel : TokenAssistant.DataService.TokenAssistantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenAssistantServiceClient : System.ServiceModel.ClientBase<TokenAssistant.DataService.TokenAssistantService>, TokenAssistant.DataService.TokenAssistantService {
        
        public TokenAssistantServiceClient() {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenAssistantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenAssistantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddApp(TokenAssistant.Data.DataLayer.AzureApp app) {
            base.Channel.AddApp(app);
        }
        
        public System.Threading.Tasks.Task AddAppAsync(TokenAssistant.Data.DataLayer.AzureApp app) {
            return base.Channel.AddAppAsync(app);
        }
        
        public void DeleteApp(string clientId) {
            base.Channel.DeleteApp(clientId);
        }
        
        public System.Threading.Tasks.Task DeleteAppAsync(string clientId) {
            return base.Channel.DeleteAppAsync(clientId);
        }
        
        public TokenAssistant.Data.DataLayer.AzureApp[] GetAllApps() {
            return base.Channel.GetAllApps();
        }
        
        public System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.AzureApp[]> GetAllAppsAsync() {
            return base.Channel.GetAllAppsAsync();
        }
        
        public void SaveApp(TokenAssistant.Data.DataLayer.AzureApp app) {
            base.Channel.SaveApp(app);
        }
        
        public System.Threading.Tasks.Task SaveAppAsync(TokenAssistant.Data.DataLayer.AzureApp app) {
            return base.Channel.SaveAppAsync(app);
        }
        
        public void SaveChanges() {
            base.Channel.SaveChanges();
        }
        
        public System.Threading.Tasks.Task SaveChangesAsync() {
            return base.Channel.SaveChangesAsync();
        }
        
        public TokenAssistant.Data.DataLayer.AzureApp GetApp(string clientId) {
            return base.Channel.GetApp(clientId);
        }
        
        public System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.AzureApp> GetAppAsync(string clientId) {
            return base.Channel.GetAppAsync(clientId);
        }
        
        public void AddUser(TokenAssistant.Data.DataLayer.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(TokenAssistant.Data.DataLayer.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void DeleteUser(TokenAssistant.Data.DataLayer.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(TokenAssistant.Data.DataLayer.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public TokenAssistant.Data.DataLayer.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public TokenAssistant.Data.DataLayer.User GetUser(string userName) {
            return base.Channel.GetUser(userName);
        }
        
        public System.Threading.Tasks.Task<TokenAssistant.Data.DataLayer.User> GetUserAsync(string userName) {
            return base.Channel.GetUserAsync(userName);
        }
    }
}
